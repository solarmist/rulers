As I've been reading this there is some mixed messages on who the target
audience is.  For example, you use map with only a passing comment, but explain
negative indices and what CRUD is in the next few pages, but I believe the
target audience is people that have created couple of small or a single medium
rails apps.  To me this reads as if it is targeting a beginner (one programming
class in a scripting language, prefferably Ruby) with no web or professional
expereince, but with bits here and there of assumed knowledge (like rails
directory structures, or how to insert a variable in erb html etc).  With a bit
of editing and expanding to clarify the target audience this book could clearly
target a first web exposure audience.  The In Rails sections are the only ones
that assume Rails experience as best I can tell (since a lot of them are over
my head).

Overall the book feels very uneven in the level between the sections, from
trivially easy to go build this on your own (never more than a few lines, but
exponentially more difficult than most of the book), plus the rails stuff.

I'd polish the end product from the book more with some nicer templates.  The
Flask tutorial (http://flask.pocoo.org/docs/tutorial/) builds a pretty similar
demo application, but the final product is something that feels like a
completed web application that I could show off (even is it is much simpler in
terms of code) just because there's a base template that has some css in it.

There no way to add a quote from the browser!!!!!  I went though all that work
and I can't install and use what I just built without a bunch of extra work!
End with a finished product not a mostly finished product.

I recommend against reminding people of your github repo in every chapter. I
think a build it yourself mentality (even if you keep your repo up for
reference) is much more powerful in making this a "good" book.

Appeal to people's maker instinct more.

Chatper 3
Starting from chatper 3 you switch to directing readers to use the github, but
in chapter 2 you explain to make all the changes, such as incrementing the
version file (and talk about incrementing it each chapter).

Page 40, para 2 "bit harder to redirect that a normal redirect" => "than than a
normal redirect"
para 3 "number bare" => "bare numbers"

Page 45 Needed to reinstall rulers before I could "rackup -p 3001", but
couldn't get "bundle exec rackup -p 3001".  You need to specifiy if you're
showing the entire file or just a snippit.

Page 49 you need to do a 'bundle install' before running
'bundle exec rerun -- rackup -p 3001', also on 10.9/ruby 2 I get
".rvm/gems/ruby-2.0.0-p247/gems/rerun-0.8.1/lib/rerun/watcher.rb:62:in
`block in start': undefined method `start!' for
#<Listen::Listener:0x007f89b42e0f28> (NoMethodError)".  Listen version 2
removes start! which rerun relies on listen 1.3.1 and hasn't been updated for
listen 2.0.0.

Page 56 The comment at the top of the ERB file has a ruby style comment at the
top instead of an HTML comment

Page 66 you should at some point mention bundle <=> bundle install.  The quote in the json should be //

Page 68 Why a bare rescue instead of FileNotFound?

P 69 Comment should be HTML style also

P 72 Comment should be //
        ["submitter", "quote", "attribution"].each do |key|
          hash[key] = attrs[key] || ""
        end
is a much nicer way of assigning the hash (since you're assuming a some
facility with Ruby and using map in the next line)
how about
    b.gsub(".json", "").to_i instead of the slice b.[0..-5]

P 76 Exercise Two is a bit unclear in its goal, what do you want the reader to
actually do?  It sounds more like a mini-discussion that mentions something you
could do in the middle more than an exercise.  It should be clear when you're
done with an exercise.

P 85 Exercise One is unclear in it's wording and seems to leave an incomplete
solution once implemented, since Rails uses class variables for passing
variables, but out quotes app is just using them directly.

P 95 Your rewriting sections of the sqlite_test.rb stuff that isn't changing
what it does, just the text in the first part then on P 97 you go back again.
Perhaps clean it up so it's closer to everything else where we're just building
on the script instead of rewriting so much, or make it more clear that it's a
rewrite each time. Personally I'd like the last version be more like a
demonstration of of most of the features we just wrote.

P. 100 What is the exercise here?

P. 110/111 The "longest path" thing didn't make any sense to me until I though
about the paths as regular expressions.  I was thinking == for map matching
until then, so rewrite it a bit would probably be good.

P. 113 You don't mention that middleware order matters. That if you have
something before Auth::Basic that something happens without authentication.

Chapter 8 feels like an extra. Either put it in an appendix or integrate it
with the best quotes app, like adding password auth for adding or modifying a
quote and benchmarking the index(all) page.  I was able to do all the
middle-ware with the app no problem, but that's ignored by the book.

P. 119 rs should be bare rather than [rs].flatten in dispatch

P. 120 Building this new routing onto Rulers I feel like there a lot of cruft
left behind, having something nice and clean at the end would be good.

P. 123 RouteObject should be inside the Rulers module shouldn't it?

P. 125 your method header doesn't match the one we wrote on p 123

P 127 next unless m instead of the big if m block

P 127  We never update Application.call to use get_rack_app in chapter 9, but
your github code has the correct version.
        klass, act = get_controller_and_action(env)
        rack_app = klass.action(act)
        rack_app.call(env)
should be
        rack_app = get_rack_app(env)
        rack_app.call(env)
